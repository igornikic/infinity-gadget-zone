name: Tests

on:
  pull_request:
  workflow_dispatch: # Allow manual runs

env:
  PORT: ${{vars.PORT}}
  NODE_ENV: ${{vars.NODE_ENV}}
  FRONTEND_URL: ${{vars.FRONTEND_URL}}
  JWT_EXPIRES_TIME: ${{vars.JWT_EXPIRES_TIME}}
  COOKIE_EXPIRES_TIME: ${{vars.COOKIE_EXPIRES_TIME}}
  GOOGLE_OAUTH_REDIRECT: ${{vars.GOOGLE_OAUTH_REDIRECT}}
  SMPT_HOST: ${{vars.SMPT_HOST}}
  SMPT_PORT: ${{vars.SMPT_PORT}}
  SMTP_EMAIL: ${{vars.SMTP_EMAIL}}
  SMTP_FROM_EMAIL: ${{vars.SMTP_FROM_EMAIL}}
  SMTP_FROM_NAME: ${{vars.SMTP_FROM_NAME}}
  USER_TEST_EMAIL: ${{vars.USER_TEST_EMAIL}}
  SELLER_TEST_EMAIL: ${{vars.SELLER_TEST_EMAIL}}
  ADMIN_TEST_EMAIL: ${{vars.ADMIN_TEST_EMAIL}}
  VITE_ENV: ${{vars.VITE_ENV}}

  DB_LOCAL_URI: ${{secrets.DB_LOCAL_URI}}
  DB_URI: ${{secrets.DB_URI}}
  USER_JWT_SECRET: ${{secrets.USER_JWT_SECRET}}
  SHOP_JWT_SECRET: ${{secrets.SHOP_JWT_SECRET}}
  CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME}}
  CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
  CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
  GOOGLE_OAUTH_CLIENT_ID: ${{secrets.GOOGLE_OAUTH_CLIENT_ID}}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{secrets.GOOGLE_OAUTH_CLIENT_SECRET}}
  SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
  VITE_ENCRYPTION_KEY: ${{secrets.VITE_ENCRYPTION_KEY}}
  VITE_GOOGLE_OAUTH_CLIENT_ID: ${{secrets.VITE_GOOGLE_OAUTH_CLIENT_ID}}

jobs:
  tests:
    backend-tests:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [18.x]

      steps:
        - name: Checkout code
        - uses: actions/checkout@v3

        - name: Setup Node.js
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}

        - name: Install dependencies
        - run: npm ci

        - name: Build
        - run: npm run build --if-present

        - name: Run backend tests
        - run: npm run test

    frontend-tests:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [18.x]

      steps:
        - name: Checkout code
        - uses: actions/checkout@v3

        - name: Setup Node.js
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}

        - name: Install dependencies
          run: |
            cd frontend
            npm ci

        - name: Build Frontend
          run: |
            cd frontend
            npm run build --if-present

        - name: Run Frontend Tests
          run: |
            cd frontend
            npm run test
